(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"4iFy":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return r}));n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("91GP"),n("q1tI");var a=n("7ljp"),o=n("soUV");var l={},s={_frontmatter:l},i=o.a;function r(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(i,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",null,"Migrating to v1 (rc)"),Object(a.b)("h2",null,"Import Changes"),Object(a.b)("p",null,"In order to help folks not using React avoid extra bytes. The ",Object(a.b)("inlineCode",{parentName:"p"},"styled")," component\nhelper has moved to it's own import: ",Object(a.b)("inlineCode",{parentName:"p"},"astroturf/react"),", which re-exports\neverything from ",Object(a.b)("inlineCode",{parentName:"p"},"astroturf")," as well as ",Object(a.b)("inlineCode",{parentName:"p"},"styled"),". To migrate automatically run the codemod:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-sh",metastring:"noFormat",noFormat:!0}),"npm install -g @codemod/cli\n\ncodemod --plugin astroturf/codemods/rename-styled-import [your files]\n")),Object(a.b)("h2",null,Object(a.b)("inlineCode",{parentName:"h2"},"css")," to ",Object(a.b)("inlineCode",{parentName:"h2"},"stylesheet")),Object(a.b)("p",null,"In v1 the ",Object(a.b)("inlineCode",{parentName:"p"},"css")," tag will now produce a ",Object(a.b)("em",{parentName:"p"},"single")," css class instead of a stylesheet.\nThe old behavior is still useful, so a new tag ",Object(a.b)("inlineCode",{parentName:"p"},"stylesheet")," has been added that\nfunctions exactly the same way as the ",Object(a.b)("inlineCode",{parentName:"p"},"css")," tag pre version 1."),Object(a.b)("p",null,"There is a codemod that will convert any non-css prop usages to ",Object(a.b)("inlineCode",{parentName:"p"},"stylesheet"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-sh",metastring:"noFormat",noFormat:!0}),"codemod --plugin astroturf/codemods/convert-css-to-stylesheet [your files]\n")),Object(a.b)("h2",null,"New Option names and defaults"),Object(a.b)("p",null,"The astroturf options have been changed to be clearer and with better defaults."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"allowGlobal")," is now false by default"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"tagName")," -> ",Object(a.b)("inlineCode",{parentName:"li"},"cssTagName")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"styledTag")," -> ",Object(a.b)("inlineCode",{parentName:"li"},"styledTagName")),Object(a.b)("li",{parentName:"ul"},"added ",Object(a.b)("inlineCode",{parentName:"li"},"stylesheetTagName"))),Object(a.b)("h2",null,"Extracted styles are imported with es module syntax"),Object(a.b)("p",null,"To be in a better place for tooling and optimizations astroturf now compiles\nstyle imports to ",Object(a.b)("inlineCode",{parentName:"p"},"import ... from")," instead of the CommonJs ",Object(a.b)("inlineCode",{parentName:"p"},"require"),". This fixes\na few CSS ordering issues as well. There is no migratin step needed, but we recommend\nyou also enable ",Object(a.b)("inlineCode",{parentName:"p"},"esmodules")," option on ",Object(a.b)("inlineCode",{parentName:"p"},"css-loader")," as well as ",Object(a.b)("inlineCode",{parentName:"p"},"mini-extract-css-plugin")," for webpack."))}r.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-migration-mdx-66239dac399c3e92afa2.js.map
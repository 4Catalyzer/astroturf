(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{v5A9:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return c}));n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("91GP"),n("q1tI");var o=n("7ljp"),a=n("soUV");var s,r={},l=(s="Brand",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",e)}),i={_frontmatter:r},p=a.a;function c(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,a={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(o.b)(p,Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",null,"Cross File Dependencies"),Object(o.b)(l,{mdxType:"Brand"},"astroturf")," allows targeting other styled components, or stylesheet modules.",Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"ButtonToolbar.js")),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"import styled from 'astroturf/react';\n\nimport Button from './Button';\n\nconst ButtonToolbar = styled('div')`\n  display: inline-flex;\n  align-items: center;'\n\n  & > ${Button} {\n    margin-right: 3rem;\n  }\n`;\n")),Object(o.b)("p",null,"Under the hood this makes use of the css-modules ",Object(o.b)("inlineCode",{parentName:"p"},"composes")," feature to import\ncss classes from other files and compose them into the new class selector."),Object(o.b)("p",null,"Rather than try and track exports of style sheets and styled components\ndirectly, ",Object(o.b)(l,{mdxType:"Brand"},"astroturf")," uses a simple naming convention to map imports to styles\nin other modules. In particular, the imported ",Object(o.b)("em",{parentName:"p"},"name")," of a styled component should\nbe the exactly the same as the name assigned to the component in it's host file."),Object(o.b)("p",null,"Take the import of ",Object(o.b)("inlineCode",{parentName:"p"},"Button")," in the example above. The implementation of ",Object(o.b)("inlineCode",{parentName:"p"},"Button.js")," looks\nsomething like this:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Button.js")),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"import styled from 'astroturf/react';\n\nconst Button = styled('button')`\n  /* ... */\n`;\n\nexport default Button;\n")),Object(o.b)("p",null,"Notice that the styled component here is assigned to the variable named ",Object(o.b)("inlineCode",{parentName:"p"},"Button"),".\nastroturf uses this information to identify the extracted style by the name ",Object(o.b)("inlineCode",{parentName:"p"},"Button"),".\nIn order to reference this componennt in ",Object(o.b)("inlineCode",{parentName:"p"},"ButtonToolbar")," it's ",Object(o.b)("em",{parentName:"p"},"important")," that it's\nimported as the same name."),Object(o.b)("p",null,"so this will work:"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"import Button from './Button';\n")),Object(o.b)("p",null,"Whereas this:"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"import MyButton from './Button';\n")),Object(o.b)("p",null,"will not work, because ",Object(o.b)("inlineCode",{parentName:"p"},"Button.js")," has no style identified by the name: ",Object(o.b)("inlineCode",{parentName:"p"},"MyButton"),".\nThe same logic also applies to named exports, and even allows aliasing, e.g.\n",Object(o.b)("inlineCode",{parentName:"p"},"import { Button as BaseButton } from './Button'")," would work."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-cross-file-dependencies-mdx-f04db988ca0abec6e7fc.js.map